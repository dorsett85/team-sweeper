package com.cphillipsdorsett.teamsweeper.game;

import org.springframework.stereotype.Repository;

import javax.persistence.EntityManager;
import javax.transaction.Transactional;
import java.util.Optional;

/**
 * Class to Combine all of the methods of a spring autogenerated Repository,
 * e.g., "findById", but creates additional methods to run raw sql using an
 * EntityManager.
 */
@Repository
public class GameDao implements GameRepository {

    EntityManager em;
    GameRepository gameRepository;

    public GameDao(EntityManager entityManager, GameRepository gameRepository) {
        em = entityManager;
        this.gameRepository = gameRepository;
    }

    @Transactional
    public void create(Game game) {
        em
            .createNativeQuery("" +
                "insert into game (difficulty, mines, non_mines, total_cells) " +
                "values (?, ?, ?, ?)"
            )
            .setParameter(1, game.difficulty)
            .setParameter(2, game.mines)
            .setParameter(3, game.nonMines)
            .setParameter(4, game.totalCells)
            .executeUpdate();
    }

    @Override
    public <S extends Game> S save(S entity) {
        return gameRepository.save(entity);
    }

    @Override
    public <S extends Game> Iterable<S> saveAll(Iterable<S> entities) {
        return gameRepository.saveAll(entities);
    }

    @Override
    public Optional<Game> findById(Integer integer) {
        return gameRepository.findById(integer);
    }

    @Override
    public boolean existsById(Integer integer) {
        return gameRepository.existsById(integer);
    }

    @Override
    public Iterable<Game> findAll() {
        return gameRepository.findAll();
    }

    @Override
    public Iterable<Game> findAllById(Iterable<Integer> integers) {
        return gameRepository.findAllById(integers);
    }

    @Override
    public long count() {
        return gameRepository.count();
    }

    @Override
    public void deleteById(Integer integer) {
        gameRepository.deleteById(integer);
    }

    @Override
    public void delete(Game entity) {
        gameRepository.delete(entity);
    }

    @Override
    public void deleteAll(Iterable<? extends Game> entities) {
        gameRepository.deleteAll(entities);
    }

    @Override
    public void deleteAll() {
        gameRepository.deleteAll();
    }
}
