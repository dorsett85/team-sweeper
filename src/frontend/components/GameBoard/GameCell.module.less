@import (reference) '../../styles/variables.less';

each(@difficulty, {
  .cellOuter-@{value} {
    display: flex;
    flex-basis: calc(100% / extract(@difficultyRowCells, @index));
    position: relative;
    height: 0;
    padding-bottom: calc(100% / extract(@difficultyRowCells, @index));
    background-color: whitesmoke;
  }
})

.cell {
  position: absolute;
  width: 100%;
  height: 100%;
  border: 1px solid transparent;
  border-radius: 2px;
  box-sizing: border-box;
  background-clip: padding-box;
}

.cellLoading {
  &:extend(.cell);
  overflow: hidden;
  background-color: gray;

  &::after {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    transform: translateX(-100%);
    background-image: linear-gradient(90deg,
    rgba(#fff, 0) 0,
    rgba(#fff, 0.4) 50%,
    rgba(#fff, 0));
    animation: shimmer 1s linear infinite;
  }
}

@keyframes shimmer {
  100% {
    transform: translateX(100%);
  }
}

.coveredCell {
  &:extend(.cell);
  background-color: black;
  cursor: pointer;
  opacity: 1;
  z-index: 1;
  transform: scale(1);
  transform-origin: bottom;
  transition: transform 0.5s, border-radius 0.5s, opacity 0.5s;

  &:hover {
    background-color: rgb(66, 66, 66);
  }
}

.coveredCellFlagged {
  &:extend(.coveredCell);

  &::after {
    content: '';
    position: absolute;
    height: inherit;
    width: inherit;
    transform: translate(-50%, -50%);
    background-image: url("../../assets/img/red-flag-32.png");
    background-position: center;
    background-size: 66.6%;
    background-repeat: no-repeat;
  }
}

.coveredCellRemoved {
  border-radius: 50px;
  opacity: 0;
  transform: scale(0);
}

.uncoveredCell {
  &:extend(.cell);
  background-color: white;
  user-select: none;
}

.uncoveredClickedMineCell {
  &:extend(.uncoveredCell);
  z-index: 10;
}

each(@colors, {
  .nearbyMineCell-@{index} {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 10%;
    height: 80%;
    background: @value;
    box-shadow: 0 0 5px 0.5px @value;
    border-radius: 8px;
    color: white;
    font-weight: bold;
  }
})

.mineCell {
  width: inherit;
  height: inherit;
  background-image: url('../../assets/img/mine-96.png');
  background-position: center;
  background-size: 85%;
  background-repeat: no-repeat;
}

.mineCellClicked {
  &:extend(.mineCell);
  animation: grow 1s ease-out infinite;
}

@keyframes grow {
  0% {
    transform: scale(1, 1);
  }
  50% {
    transform: scale(1.5, 1.5);
  }
  100% {
    transform: scale(1, 1);
  }
}